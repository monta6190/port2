{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('react')) : typeof define === 'function' && define.amd ? define(['react'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.AnimatedCursor = factory(global.React));\n})(this, function (React) {\n  'use strict';\n\n  function _interopDefaultLegacy(e) {\n    return e && typeof e === 'object' && 'default' in e ? e : {\n      'default': e\n    };\n  }\n  var React__default = /*#__PURE__*/_interopDefaultLegacy(React);\n  var propTypes = {\n    exports: {}\n  };\n  var reactIs = {\n    exports: {}\n  };\n  var reactIs_production_min = {};\n\n  /** @license React v16.13.1\n   * react-is.production.min.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var hasRequiredReactIs_production_min;\n  function requireReactIs_production_min() {\n    if (hasRequiredReactIs_production_min) return reactIs_production_min;\n    hasRequiredReactIs_production_min = 1;\n    var b = \"function\" === typeof Symbol && Symbol.for,\n      c = b ? Symbol.for(\"react.element\") : 60103,\n      d = b ? Symbol.for(\"react.portal\") : 60106,\n      e = b ? Symbol.for(\"react.fragment\") : 60107,\n      f = b ? Symbol.for(\"react.strict_mode\") : 60108,\n      g = b ? Symbol.for(\"react.profiler\") : 60114,\n      h = b ? Symbol.for(\"react.provider\") : 60109,\n      k = b ? Symbol.for(\"react.context\") : 60110,\n      l = b ? Symbol.for(\"react.async_mode\") : 60111,\n      m = b ? Symbol.for(\"react.concurrent_mode\") : 60111,\n      n = b ? Symbol.for(\"react.forward_ref\") : 60112,\n      p = b ? Symbol.for(\"react.suspense\") : 60113,\n      q = b ? Symbol.for(\"react.suspense_list\") : 60120,\n      r = b ? Symbol.for(\"react.memo\") : 60115,\n      t = b ? Symbol.for(\"react.lazy\") : 60116,\n      v = b ? Symbol.for(\"react.block\") : 60121,\n      w = b ? Symbol.for(\"react.fundamental\") : 60117,\n      x = b ? Symbol.for(\"react.responder\") : 60118,\n      y = b ? Symbol.for(\"react.scope\") : 60119;\n    function z(a) {\n      if (\"object\" === typeof a && null !== a) {\n        var u = a.$$typeof;\n        switch (u) {\n          case c:\n            switch (a = a.type, a) {\n              case l:\n              case m:\n              case e:\n              case g:\n              case f:\n              case p:\n                return a;\n              default:\n                switch (a = a && a.$$typeof, a) {\n                  case k:\n                  case n:\n                  case t:\n                  case r:\n                  case h:\n                    return a;\n                  default:\n                    return u;\n                }\n            }\n          case d:\n            return u;\n        }\n      }\n    }\n    function A(a) {\n      return z(a) === m;\n    }\n    reactIs_production_min.AsyncMode = l;\n    reactIs_production_min.ConcurrentMode = m;\n    reactIs_production_min.ContextConsumer = k;\n    reactIs_production_min.ContextProvider = h;\n    reactIs_production_min.Element = c;\n    reactIs_production_min.ForwardRef = n;\n    reactIs_production_min.Fragment = e;\n    reactIs_production_min.Lazy = t;\n    reactIs_production_min.Memo = r;\n    reactIs_production_min.Portal = d;\n    reactIs_production_min.Profiler = g;\n    reactIs_production_min.StrictMode = f;\n    reactIs_production_min.Suspense = p;\n    reactIs_production_min.isAsyncMode = function (a) {\n      return A(a) || z(a) === l;\n    };\n    reactIs_production_min.isConcurrentMode = A;\n    reactIs_production_min.isContextConsumer = function (a) {\n      return z(a) === k;\n    };\n    reactIs_production_min.isContextProvider = function (a) {\n      return z(a) === h;\n    };\n    reactIs_production_min.isElement = function (a) {\n      return \"object\" === typeof a && null !== a && a.$$typeof === c;\n    };\n    reactIs_production_min.isForwardRef = function (a) {\n      return z(a) === n;\n    };\n    reactIs_production_min.isFragment = function (a) {\n      return z(a) === e;\n    };\n    reactIs_production_min.isLazy = function (a) {\n      return z(a) === t;\n    };\n    reactIs_production_min.isMemo = function (a) {\n      return z(a) === r;\n    };\n    reactIs_production_min.isPortal = function (a) {\n      return z(a) === d;\n    };\n    reactIs_production_min.isProfiler = function (a) {\n      return z(a) === g;\n    };\n    reactIs_production_min.isStrictMode = function (a) {\n      return z(a) === f;\n    };\n    reactIs_production_min.isSuspense = function (a) {\n      return z(a) === p;\n    };\n    reactIs_production_min.isValidElementType = function (a) {\n      return \"string\" === typeof a || \"function\" === typeof a || a === e || a === m || a === g || a === f || a === p || a === q || \"object\" === typeof a && null !== a && (a.$$typeof === t || a.$$typeof === r || a.$$typeof === h || a.$$typeof === k || a.$$typeof === n || a.$$typeof === w || a.$$typeof === x || a.$$typeof === y || a.$$typeof === v);\n    };\n    reactIs_production_min.typeOf = z;\n    return reactIs_production_min;\n  }\n  var reactIs_development = {};\n\n  /** @license React v16.13.1\n   * react-is.development.js\n   *\n   * Copyright (c) Facebook, Inc. and its affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var hasRequiredReactIs_development;\n  function requireReactIs_development() {\n    if (hasRequiredReactIs_development) return reactIs_development;\n    hasRequiredReactIs_development = 1;\n    if (process.env.NODE_ENV !== \"production\") {\n      (function () {\n        // The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n        // nor polyfill, then a plain number is used for performance.\n        var hasSymbol = typeof Symbol === 'function' && Symbol.for;\n        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\n        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\n        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\n        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\n        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\n        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\n        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\n        // (unstable) APIs that have been removed. Can we remove the symbols?\n\n        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\n        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\n        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\n        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\n        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\n        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\n        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\n        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\n        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\n        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\n        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\n        function isValidElementType(type) {\n          return typeof type === 'string' || typeof type === 'function' ||\n          // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\n          type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\n        }\n        function typeOf(object) {\n          if (typeof object === 'object' && object !== null) {\n            var $$typeof = object.$$typeof;\n            switch ($$typeof) {\n              case REACT_ELEMENT_TYPE:\n                var type = object.type;\n                switch (type) {\n                  case REACT_ASYNC_MODE_TYPE:\n                  case REACT_CONCURRENT_MODE_TYPE:\n                  case REACT_FRAGMENT_TYPE:\n                  case REACT_PROFILER_TYPE:\n                  case REACT_STRICT_MODE_TYPE:\n                  case REACT_SUSPENSE_TYPE:\n                    return type;\n                  default:\n                    var $$typeofType = type && type.$$typeof;\n                    switch ($$typeofType) {\n                      case REACT_CONTEXT_TYPE:\n                      case REACT_FORWARD_REF_TYPE:\n                      case REACT_LAZY_TYPE:\n                      case REACT_MEMO_TYPE:\n                      case REACT_PROVIDER_TYPE:\n                        return $$typeofType;\n                      default:\n                        return $$typeof;\n                    }\n                }\n              case REACT_PORTAL_TYPE:\n                return $$typeof;\n            }\n          }\n          return undefined;\n        } // AsyncMode is deprecated along with isAsyncMode\n\n        var AsyncMode = REACT_ASYNC_MODE_TYPE;\n        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\n        var ContextConsumer = REACT_CONTEXT_TYPE;\n        var ContextProvider = REACT_PROVIDER_TYPE;\n        var Element = REACT_ELEMENT_TYPE;\n        var ForwardRef = REACT_FORWARD_REF_TYPE;\n        var Fragment = REACT_FRAGMENT_TYPE;\n        var Lazy = REACT_LAZY_TYPE;\n        var Memo = REACT_MEMO_TYPE;\n        var Portal = REACT_PORTAL_TYPE;\n        var Profiler = REACT_PROFILER_TYPE;\n        var StrictMode = REACT_STRICT_MODE_TYPE;\n        var Suspense = REACT_SUSPENSE_TYPE;\n        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\n\n        function isAsyncMode(object) {\n          {\n            if (!hasWarnedAboutDeprecatedIsAsyncMode) {\n              hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\n\n              console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\n            }\n          }\n          return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\n        }\n        function isConcurrentMode(object) {\n          return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\n        }\n        function isContextConsumer(object) {\n          return typeOf(object) === REACT_CONTEXT_TYPE;\n        }\n        function isContextProvider(object) {\n          return typeOf(object) === REACT_PROVIDER_TYPE;\n        }\n        function isElement(object) {\n          return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n        }\n        function isForwardRef(object) {\n          return typeOf(object) === REACT_FORWARD_REF_TYPE;\n        }\n        function isFragment(object) {\n          return typeOf(object) === REACT_FRAGMENT_TYPE;\n        }\n        function isLazy(object) {\n          return typeOf(object) === REACT_LAZY_TYPE;\n        }\n        function isMemo(object) {\n          return typeOf(object) === REACT_MEMO_TYPE;\n        }\n        function isPortal(object) {\n          return typeOf(object) === REACT_PORTAL_TYPE;\n        }\n        function isProfiler(object) {\n          return typeOf(object) === REACT_PROFILER_TYPE;\n        }\n        function isStrictMode(object) {\n          return typeOf(object) === REACT_STRICT_MODE_TYPE;\n        }\n        function isSuspense(object) {\n          return typeOf(object) === REACT_SUSPENSE_TYPE;\n        }\n        reactIs_development.AsyncMode = AsyncMode;\n        reactIs_development.ConcurrentMode = ConcurrentMode;\n        reactIs_development.ContextConsumer = ContextConsumer;\n        reactIs_development.ContextProvider = ContextProvider;\n        reactIs_development.Element = Element;\n        reactIs_development.ForwardRef = ForwardRef;\n        reactIs_development.Fragment = Fragment;\n        reactIs_development.Lazy = Lazy;\n        reactIs_development.Memo = Memo;\n        reactIs_development.Portal = Portal;\n        reactIs_development.Profiler = Profiler;\n        reactIs_development.StrictMode = StrictMode;\n        reactIs_development.Suspense = Suspense;\n        reactIs_development.isAsyncMode = isAsyncMode;\n        reactIs_development.isConcurrentMode = isConcurrentMode;\n        reactIs_development.isContextConsumer = isContextConsumer;\n        reactIs_development.isContextProvider = isContextProvider;\n        reactIs_development.isElement = isElement;\n        reactIs_development.isForwardRef = isForwardRef;\n        reactIs_development.isFragment = isFragment;\n        reactIs_development.isLazy = isLazy;\n        reactIs_development.isMemo = isMemo;\n        reactIs_development.isPortal = isPortal;\n        reactIs_development.isProfiler = isProfiler;\n        reactIs_development.isStrictMode = isStrictMode;\n        reactIs_development.isSuspense = isSuspense;\n        reactIs_development.isValidElementType = isValidElementType;\n        reactIs_development.typeOf = typeOf;\n      })();\n    }\n    return reactIs_development;\n  }\n  var hasRequiredReactIs;\n  function requireReactIs() {\n    if (hasRequiredReactIs) return reactIs.exports;\n    hasRequiredReactIs = 1;\n    (function (module) {\n      if (process.env.NODE_ENV === 'production') {\n        module.exports = requireReactIs_production_min();\n      } else {\n        module.exports = requireReactIs_development();\n      }\n    })(reactIs);\n    return reactIs.exports;\n  }\n\n  /*\n  object-assign\n  (c) Sindre Sorhus\n  @license MIT\n  */\n\n  var objectAssign;\n  var hasRequiredObjectAssign;\n  function requireObjectAssign() {\n    if (hasRequiredObjectAssign) return objectAssign;\n    hasRequiredObjectAssign = 1;\n    /* eslint-disable no-unused-vars */\n    var getOwnPropertySymbols = Object.getOwnPropertySymbols;\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\n    var propIsEnumerable = Object.prototype.propertyIsEnumerable;\n    function toObject(val) {\n      if (val === null || val === undefined) {\n        throw new TypeError('Object.assign cannot be called with null or undefined');\n      }\n      return Object(val);\n    }\n    function shouldUseNative() {\n      try {\n        if (!Object.assign) {\n          return false;\n        }\n\n        // Detect buggy property enumeration order in older V8 versions.\n\n        // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n        var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n        test1[5] = 'de';\n        if (Object.getOwnPropertyNames(test1)[0] === '5') {\n          return false;\n        }\n\n        // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n        var test2 = {};\n        for (var i = 0; i < 10; i++) {\n          test2['_' + String.fromCharCode(i)] = i;\n        }\n        var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n          return test2[n];\n        });\n        if (order2.join('') !== '0123456789') {\n          return false;\n        }\n\n        // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n        var test3 = {};\n        'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n          test3[letter] = letter;\n        });\n        if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n          return false;\n        }\n        return true;\n      } catch (err) {\n        // We don't expect any of the above to throw, but better to be safe.\n        return false;\n      }\n    }\n    objectAssign = shouldUseNative() ? Object.assign : function (target, source) {\n      var from;\n      var to = toObject(target);\n      var symbols;\n      for (var s = 1; s < arguments.length; s++) {\n        from = Object(arguments[s]);\n        for (var key in from) {\n          if (hasOwnProperty.call(from, key)) {\n            to[key] = from[key];\n          }\n        }\n        if (getOwnPropertySymbols) {\n          symbols = getOwnPropertySymbols(from);\n          for (var i = 0; i < symbols.length; i++) {\n            if (propIsEnumerable.call(from, symbols[i])) {\n              to[symbols[i]] = from[symbols[i]];\n            }\n          }\n        }\n      }\n      return to;\n    };\n    return objectAssign;\n  }\n\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var ReactPropTypesSecret_1;\n  var hasRequiredReactPropTypesSecret;\n  function requireReactPropTypesSecret() {\n    if (hasRequiredReactPropTypesSecret) return ReactPropTypesSecret_1;\n    hasRequiredReactPropTypesSecret = 1;\n    var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n    ReactPropTypesSecret_1 = ReactPropTypesSecret;\n    return ReactPropTypesSecret_1;\n  }\n  var has;\n  var hasRequiredHas;\n  function requireHas() {\n    if (hasRequiredHas) return has;\n    hasRequiredHas = 1;\n    has = Function.call.bind(Object.prototype.hasOwnProperty);\n    return has;\n  }\n\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var checkPropTypes_1;\n  var hasRequiredCheckPropTypes;\n  function requireCheckPropTypes() {\n    if (hasRequiredCheckPropTypes) return checkPropTypes_1;\n    hasRequiredCheckPropTypes = 1;\n    var printWarning = function () {};\n    if (process.env.NODE_ENV !== 'production') {\n      var ReactPropTypesSecret = requireReactPropTypesSecret();\n      var loggedTypeFailures = {};\n      var has = requireHas();\n      printWarning = function (text) {\n        var message = 'Warning: ' + text;\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {/**/}\n      };\n    }\n\n    /**\n     * Assert that the values match with the type specs.\n     * Error messages are memorized and will only be shown once.\n     *\n     * @param {object} typeSpecs Map of name to a ReactPropType\n     * @param {object} values Runtime values that need to be type-checked\n     * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n     * @param {string} componentName Name of the component for error messages.\n     * @param {?Function} getStack Returns the component stack.\n     * @private\n     */\n    function checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n      if (process.env.NODE_ENV !== 'production') {\n        for (var typeSpecName in typeSpecs) {\n          if (has(typeSpecs, typeSpecName)) {\n            var error;\n            // Prop type validation may throw. In case they do, we don't want to\n            // fail the render phase where it didn't fail before. So we log it.\n            // After these have been cleaned up, we'll let them throw.\n            try {\n              // This is intentionally an invariant that gets caught. It's the same\n              // behavior as without this statement except with a better message.\n              if (typeof typeSpecs[typeSpecName] !== 'function') {\n                var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');\n                err.name = 'Invariant Violation';\n                throw err;\n              }\n              error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n            } catch (ex) {\n              error = ex;\n            }\n            if (error && !(error instanceof Error)) {\n              printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');\n            }\n            if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n              // Only monitor this failure once because there tends to be a lot of the\n              // same error.\n              loggedTypeFailures[error.message] = true;\n              var stack = getStack ? getStack() : '';\n              printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Resets warning cache when testing.\n     *\n     * @private\n     */\n    checkPropTypes.resetWarningCache = function () {\n      if (process.env.NODE_ENV !== 'production') {\n        loggedTypeFailures = {};\n      }\n    };\n    checkPropTypes_1 = checkPropTypes;\n    return checkPropTypes_1;\n  }\n\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var factoryWithTypeCheckers;\n  var hasRequiredFactoryWithTypeCheckers;\n  function requireFactoryWithTypeCheckers() {\n    if (hasRequiredFactoryWithTypeCheckers) return factoryWithTypeCheckers;\n    hasRequiredFactoryWithTypeCheckers = 1;\n    var ReactIs = requireReactIs();\n    var assign = requireObjectAssign();\n    var ReactPropTypesSecret = requireReactPropTypesSecret();\n    var has = requireHas();\n    var checkPropTypes = requireCheckPropTypes();\n    var printWarning = function () {};\n    if (process.env.NODE_ENV !== 'production') {\n      printWarning = function (text) {\n        var message = 'Warning: ' + text;\n        if (typeof console !== 'undefined') {\n          console.error(message);\n        }\n        try {\n          // --- Welcome to debugging React ---\n          // This error was thrown as a convenience so that you can use this stack\n          // to find the callsite that caused this warning to fire.\n          throw new Error(message);\n        } catch (x) {}\n      };\n    }\n    function emptyFunctionThatReturnsNull() {\n      return null;\n    }\n    factoryWithTypeCheckers = function (isValidElement, throwOnDirectAccess) {\n      /* global Symbol */\n      var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\n      var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.\n\n      /**\n       * Returns the iterator method function contained on the iterable object.\n       *\n       * Be sure to invoke the function with the iterable as context:\n       *\n       *     var iteratorFn = getIteratorFn(myIterable);\n       *     if (iteratorFn) {\n       *       var iterator = iteratorFn.call(myIterable);\n       *       ...\n       *     }\n       *\n       * @param {?object} maybeIterable\n       * @return {?function}\n       */\n      function getIteratorFn(maybeIterable) {\n        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);\n        if (typeof iteratorFn === 'function') {\n          return iteratorFn;\n        }\n      }\n\n      /**\n       * Collection of methods that allow declaration and validation of props that are\n       * supplied to React components. Example usage:\n       *\n       *   var Props = require('ReactPropTypes');\n       *   var MyArticle = React.createClass({\n       *     propTypes: {\n       *       // An optional string prop named \"description\".\n       *       description: Props.string,\n       *\n       *       // A required enum prop named \"category\".\n       *       category: Props.oneOf(['News','Photos']).isRequired,\n       *\n       *       // A prop named \"dialog\" that requires an instance of Dialog.\n       *       dialog: Props.instanceOf(Dialog).isRequired\n       *     },\n       *     render: function() { ... }\n       *   });\n       *\n       * A more formal specification of how these methods are used:\n       *\n       *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)\n       *   decl := ReactPropTypes.{type}(.isRequired)?\n       *\n       * Each and every declaration produces a function with the same signature. This\n       * allows the creation of custom validation functions. For example:\n       *\n       *  var MyLink = React.createClass({\n       *    propTypes: {\n       *      // An optional string or URI prop named \"href\".\n       *      href: function(props, propName, componentName) {\n       *        var propValue = props[propName];\n       *        if (propValue != null && typeof propValue !== 'string' &&\n       *            !(propValue instanceof URI)) {\n       *          return new Error(\n       *            'Expected a string or an URI for ' + propName + ' in ' +\n       *            componentName\n       *          );\n       *        }\n       *      }\n       *    },\n       *    render: function() {...}\n       *  });\n       *\n       * @internal\n       */\n\n      var ANONYMOUS = '<<anonymous>>';\n\n      // Important!\n      // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.\n      var ReactPropTypes = {\n        array: createPrimitiveTypeChecker('array'),\n        bigint: createPrimitiveTypeChecker('bigint'),\n        bool: createPrimitiveTypeChecker('boolean'),\n        func: createPrimitiveTypeChecker('function'),\n        number: createPrimitiveTypeChecker('number'),\n        object: createPrimitiveTypeChecker('object'),\n        string: createPrimitiveTypeChecker('string'),\n        symbol: createPrimitiveTypeChecker('symbol'),\n        any: createAnyTypeChecker(),\n        arrayOf: createArrayOfTypeChecker,\n        element: createElementTypeChecker(),\n        elementType: createElementTypeTypeChecker(),\n        instanceOf: createInstanceTypeChecker,\n        node: createNodeChecker(),\n        objectOf: createObjectOfTypeChecker,\n        oneOf: createEnumTypeChecker,\n        oneOfType: createUnionTypeChecker,\n        shape: createShapeTypeChecker,\n        exact: createStrictShapeTypeChecker\n      };\n\n      /**\n       * inlined Object.is polyfill to avoid requiring consumers ship their own\n       * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n       */\n      /*eslint-disable no-self-compare*/\n      function is(x, y) {\n        // SameValue algorithm\n        if (x === y) {\n          // Steps 1-5, 7-10\n          // Steps 6.b-6.e: +0 != -0\n          return x !== 0 || 1 / x === 1 / y;\n        } else {\n          // Step 6.a: NaN == NaN\n          return x !== x && y !== y;\n        }\n      }\n      /*eslint-enable no-self-compare*/\n\n      /**\n       * We use an Error-like object for backward compatibility as people may call\n       * PropTypes directly and inspect their output. However, we don't use real\n       * Errors anymore. We don't inspect their stack anyway, and creating them\n       * is prohibitively expensive if they are created too often, such as what\n       * happens in oneOfType() for any type before the one that matched.\n       */\n      function PropTypeError(message, data) {\n        this.message = message;\n        this.data = data && typeof data === 'object' ? data : {};\n        this.stack = '';\n      }\n      // Make `instanceof Error` still work for returned errors.\n      PropTypeError.prototype = Error.prototype;\n      function createChainableTypeChecker(validate) {\n        if (process.env.NODE_ENV !== 'production') {\n          var manualPropTypeCallCache = {};\n          var manualPropTypeWarningCount = 0;\n        }\n        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {\n          componentName = componentName || ANONYMOUS;\n          propFullName = propFullName || propName;\n          if (secret !== ReactPropTypesSecret) {\n            if (throwOnDirectAccess) {\n              // New behavior only for users of `prop-types` package\n              var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n              err.name = 'Invariant Violation';\n              throw err;\n            } else if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n              // Old behavior for people using React.PropTypes\n              var cacheKey = componentName + ':' + propName;\n              if (!manualPropTypeCallCache[cacheKey] &&\n              // Avoid spamming the console because they are often not actionable except for lib authors\n              manualPropTypeWarningCount < 3) {\n                printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');\n                manualPropTypeCallCache[cacheKey] = true;\n                manualPropTypeWarningCount++;\n              }\n            }\n          }\n          if (props[propName] == null) {\n            if (isRequired) {\n              if (props[propName] === null) {\n                return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));\n              }\n              return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));\n            }\n            return null;\n          } else {\n            return validate(props, propName, componentName, location, propFullName);\n          }\n        }\n        var chainedCheckType = checkType.bind(null, false);\n        chainedCheckType.isRequired = checkType.bind(null, true);\n        return chainedCheckType;\n      }\n      function createPrimitiveTypeChecker(expectedType) {\n        function validate(props, propName, componentName, location, propFullName, secret) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n          if (propType !== expectedType) {\n            // `propValue` being instance of, say, date/regexp, pass the 'object'\n            // check, but we can offer a more precise error message here rather than\n            // 'of type `object`'.\n            var preciseType = getPreciseType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {\n              expectedType: expectedType\n            });\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createAnyTypeChecker() {\n        return createChainableTypeChecker(emptyFunctionThatReturnsNull);\n      }\n      function createArrayOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (typeof typeChecker !== 'function') {\n            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');\n          }\n          var propValue = props[propName];\n          if (!Array.isArray(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));\n          }\n          for (var i = 0; i < propValue.length; i++) {\n            var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);\n            if (error instanceof Error) {\n              return error;\n            }\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createElementTypeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          if (!isValidElement(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createElementTypeTypeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          if (!ReactIs.isValidElementType(propValue)) {\n            var propType = getPropType(propValue);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createInstanceTypeChecker(expectedClass) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (!(props[propName] instanceof expectedClass)) {\n            var expectedClassName = expectedClass.name || ANONYMOUS;\n            var actualClassName = getClassName(props[propName]);\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createEnumTypeChecker(expectedValues) {\n        if (!Array.isArray(expectedValues)) {\n          if (process.env.NODE_ENV !== 'production') {\n            if (arguments.length > 1) {\n              printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');\n            } else {\n              printWarning('Invalid argument supplied to oneOf, expected an array.');\n            }\n          }\n          return emptyFunctionThatReturnsNull;\n        }\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          for (var i = 0; i < expectedValues.length; i++) {\n            if (is(propValue, expectedValues[i])) {\n              return null;\n            }\n          }\n          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {\n            var type = getPreciseType(value);\n            if (type === 'symbol') {\n              return String(value);\n            }\n            return value;\n          });\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createObjectOfTypeChecker(typeChecker) {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (typeof typeChecker !== 'function') {\n            return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');\n          }\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));\n          }\n          for (var key in propValue) {\n            if (has(propValue, key)) {\n              var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n              if (error instanceof Error) {\n                return error;\n              }\n            }\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createUnionTypeChecker(arrayOfTypeCheckers) {\n        if (!Array.isArray(arrayOfTypeCheckers)) {\n          process.env.NODE_ENV !== 'production' ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : void 0;\n          return emptyFunctionThatReturnsNull;\n        }\n        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n          var checker = arrayOfTypeCheckers[i];\n          if (typeof checker !== 'function') {\n            printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');\n            return emptyFunctionThatReturnsNull;\n          }\n        }\n        function validate(props, propName, componentName, location, propFullName) {\n          var expectedTypes = [];\n          for (var i = 0; i < arrayOfTypeCheckers.length; i++) {\n            var checker = arrayOfTypeCheckers[i];\n            var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);\n            if (checkerResult == null) {\n              return null;\n            }\n            if (checkerResult.data && has(checkerResult.data, 'expectedType')) {\n              expectedTypes.push(checkerResult.data.expectedType);\n            }\n          }\n          var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';\n          return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createNodeChecker() {\n        function validate(props, propName, componentName, location, propFullName) {\n          if (!isNode(props[propName])) {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function invalidValidatorError(componentName, location, propFullName, key, type) {\n        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');\n      }\n      function createShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n          }\n          for (var key in shapeTypes) {\n            var checker = shapeTypes[key];\n            if (typeof checker !== 'function') {\n              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n            }\n            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n            if (error) {\n              return error;\n            }\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function createStrictShapeTypeChecker(shapeTypes) {\n        function validate(props, propName, componentName, location, propFullName) {\n          var propValue = props[propName];\n          var propType = getPropType(propValue);\n          if (propType !== 'object') {\n            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));\n          }\n          // We need to check all keys in case some are required but missing from props.\n          var allKeys = assign({}, props[propName], shapeTypes);\n          for (var key in allKeys) {\n            var checker = shapeTypes[key];\n            if (has(shapeTypes, key) && typeof checker !== 'function') {\n              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));\n            }\n            if (!checker) {\n              return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));\n            }\n            var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);\n            if (error) {\n              return error;\n            }\n          }\n          return null;\n        }\n        return createChainableTypeChecker(validate);\n      }\n      function isNode(propValue) {\n        switch (typeof propValue) {\n          case 'number':\n          case 'string':\n          case 'undefined':\n            return true;\n          case 'boolean':\n            return !propValue;\n          case 'object':\n            if (Array.isArray(propValue)) {\n              return propValue.every(isNode);\n            }\n            if (propValue === null || isValidElement(propValue)) {\n              return true;\n            }\n            var iteratorFn = getIteratorFn(propValue);\n            if (iteratorFn) {\n              var iterator = iteratorFn.call(propValue);\n              var step;\n              if (iteratorFn !== propValue.entries) {\n                while (!(step = iterator.next()).done) {\n                  if (!isNode(step.value)) {\n                    return false;\n                  }\n                }\n              } else {\n                // Iterator will provide entry [k,v] tuples rather than values.\n                while (!(step = iterator.next()).done) {\n                  var entry = step.value;\n                  if (entry) {\n                    if (!isNode(entry[1])) {\n                      return false;\n                    }\n                  }\n                }\n              }\n            } else {\n              return false;\n            }\n            return true;\n          default:\n            return false;\n        }\n      }\n      function isSymbol(propType, propValue) {\n        // Native Symbol.\n        if (propType === 'symbol') {\n          return true;\n        }\n\n        // falsy value can't be a Symbol\n        if (!propValue) {\n          return false;\n        }\n\n        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'\n        if (propValue['@@toStringTag'] === 'Symbol') {\n          return true;\n        }\n\n        // Fallback for non-spec compliant Symbols which are polyfilled.\n        if (typeof Symbol === 'function' && propValue instanceof Symbol) {\n          return true;\n        }\n        return false;\n      }\n\n      // Equivalent of `typeof` but with special handling for array and regexp.\n      function getPropType(propValue) {\n        var propType = typeof propValue;\n        if (Array.isArray(propValue)) {\n          return 'array';\n        }\n        if (propValue instanceof RegExp) {\n          // Old webkits (at least until Android 4.0) return 'function' rather than\n          // 'object' for typeof a RegExp. We'll normalize this here so that /bla/\n          // passes PropTypes.object.\n          return 'object';\n        }\n        if (isSymbol(propType, propValue)) {\n          return 'symbol';\n        }\n        return propType;\n      }\n\n      // This handles more types than `getPropType`. Only used for error messages.\n      // See `createPrimitiveTypeChecker`.\n      function getPreciseType(propValue) {\n        if (typeof propValue === 'undefined' || propValue === null) {\n          return '' + propValue;\n        }\n        var propType = getPropType(propValue);\n        if (propType === 'object') {\n          if (propValue instanceof Date) {\n            return 'date';\n          } else if (propValue instanceof RegExp) {\n            return 'regexp';\n          }\n        }\n        return propType;\n      }\n\n      // Returns a string that is postfixed to a warning about an invalid type.\n      // For example, \"undefined\" or \"of type array\"\n      function getPostfixForTypeWarning(value) {\n        var type = getPreciseType(value);\n        switch (type) {\n          case 'array':\n          case 'object':\n            return 'an ' + type;\n          case 'boolean':\n          case 'date':\n          case 'regexp':\n            return 'a ' + type;\n          default:\n            return type;\n        }\n      }\n\n      // Returns class name of the object, if any.\n      function getClassName(propValue) {\n        if (!propValue.constructor || !propValue.constructor.name) {\n          return ANONYMOUS;\n        }\n        return propValue.constructor.name;\n      }\n      ReactPropTypes.checkPropTypes = checkPropTypes;\n      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;\n      ReactPropTypes.PropTypes = ReactPropTypes;\n      return ReactPropTypes;\n    };\n    return factoryWithTypeCheckers;\n  }\n\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  var factoryWithThrowingShims;\n  var hasRequiredFactoryWithThrowingShims;\n  function requireFactoryWithThrowingShims() {\n    if (hasRequiredFactoryWithThrowingShims) return factoryWithThrowingShims;\n    hasRequiredFactoryWithThrowingShims = 1;\n    var ReactPropTypesSecret = requireReactPropTypesSecret();\n    function emptyFunction() {}\n    function emptyFunctionWithReset() {}\n    emptyFunctionWithReset.resetWarningCache = emptyFunction;\n    factoryWithThrowingShims = function () {\n      function shim(props, propName, componentName, location, propFullName, secret) {\n        if (secret === ReactPropTypesSecret) {\n          // It is still safe when called from React.\n          return;\n        }\n        var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n        err.name = 'Invariant Violation';\n        throw err;\n      }\n      shim.isRequired = shim;\n      function getShim() {\n        return shim;\n      } // Important!\n      // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n      var ReactPropTypes = {\n        array: shim,\n        bigint: shim,\n        bool: shim,\n        func: shim,\n        number: shim,\n        object: shim,\n        string: shim,\n        symbol: shim,\n        any: shim,\n        arrayOf: getShim,\n        element: shim,\n        elementType: shim,\n        instanceOf: getShim,\n        node: shim,\n        objectOf: getShim,\n        oneOf: getShim,\n        oneOfType: getShim,\n        shape: getShim,\n        exact: getShim,\n        checkPropTypes: emptyFunctionWithReset,\n        resetWarningCache: emptyFunction\n      };\n      ReactPropTypes.PropTypes = ReactPropTypes;\n      return ReactPropTypes;\n    };\n    return factoryWithThrowingShims;\n  }\n\n  /**\n   * Copyright (c) 2013-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n\n  if (process.env.NODE_ENV !== 'production') {\n    var ReactIs = requireReactIs();\n\n    // By explicitly using `prop-types` you are opting into new development behavior.\n    // http://fb.me/prop-types-in-prod\n    var throwOnDirectAccess = true;\n    propTypes.exports = requireFactoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);\n  } else {\n    // By explicitly using `prop-types` you are opting into new production behavior.\n    // http://fb.me/prop-types-in-prod\n    propTypes.exports = requireFactoryWithThrowingShims()();\n  }\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n\n  /**\n   * useEventListener\n   * Hook for handling EventListeners\n   * @return {object} width, height\n   */\n\n  function useEventListener(eventName, handler) {\n    let element = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : window;\n    // Create a ref that stores handler\n    const savedHandler = React.useRef(); // Update ref.current value if handler changes.\n\n    React.useEffect(() => {\n      savedHandler.current = handler;\n    }, [handler]);\n    React.useEffect(() => {\n      // Make sure element supports addEventListener\n      const isSupported = element && element.addEventListener;\n      if (!isSupported) return; // Create event listener that calls handler function stored in ref\n\n      const eventListener = event => savedHandler.current(event); // Add event listener\n\n      element.addEventListener(eventName, eventListener); // Remove event listener on cleanup\n\n      return () => {\n        element.removeEventListener(eventName, eventListener);\n      };\n    }, [eventName, element] // Re-run if eventName or element changes\n    );\n  }\n\n  const IsDevice = (() => {\n    if (typeof navigator == 'undefined') return;\n    let ua = navigator.userAgent;\n    return {\n      info: ua,\n      Android() {\n        return ua.match(/Android/i);\n      },\n      BlackBerry() {\n        return ua.match(/BlackBerry/i);\n      },\n      IEMobile() {\n        return ua.match(/IEMobile/i);\n      },\n      iOS() {\n        return ua.match(/iPhone|iPad|iPod/i);\n      },\n      iPad() {\n        return ua.match(/Mac/) && navigator.maxTouchPoints && navigator.maxTouchPoints > 2;\n      },\n      OperaMini() {\n        return ua.match(/Opera Mini/i);\n      },\n      /**\n       * Any Device\n       */\n      any() {\n        return IsDevice.Android() || IsDevice.BlackBerry() || IsDevice.iOS() || IsDevice.iPad() || IsDevice.OperaMini() || IsDevice.IEMobile();\n      }\n    };\n  })(); // Export\n\n  /**\n   * Cursor Core\n   * Replaces the native cursor with a custom animated cursor, consisting\n   * of an inner and outer dot that scale inversely based on hover or click.\n   *\n   * @author Stephen Scaff (github.com/stephenscaff)\n   *\n   * @param {array}  clickables - array of clickable selectors\n   * @param {string} color - rgb color value\n   * @param {number} innerScale - inner cursor scale amount\n   * @param {number} innerSize - inner cursor size in px\n   * @param {object} innerStyle - style object for inner cursor\n   * @param {number} outerAlpha - level of alpha transparency for color\n   * @param {number} outerScale - outer cursor scale amount\n   * @param {number} outerSize - outer cursor size in px\n   * @param {object} outerStyle - style object for outer cursor\n   * @param {bool}   showSystemCursor - show/hide system cursor\n   * @param {number} trailingSpeed - speed the outer cursor trails at\n   */\n\n  function CursorCore(_ref) {\n    let {\n      clickables = ['a', 'input[type=\"text\"]', 'input[type=\"email\"]', 'input[type=\"number\"]', 'input[type=\"submit\"]', 'input[type=\"image\"]', 'label[for]', 'select', 'textarea', 'button', '.link'],\n      color = '220, 90, 90',\n      innerScale = 0.6,\n      innerSize = 8,\n      innerStyle,\n      outerAlpha = 0.4,\n      outerScale = 6,\n      outerSize = 8,\n      outerStyle,\n      showSystemCursor = false,\n      trailingSpeed = 8\n    } = _ref;\n    const cursorOuterRef = React.useRef();\n    const cursorInnerRef = React.useRef();\n    const requestRef = React.useRef();\n    const previousTimeRef = React.useRef();\n    const [coords, setCoords] = React.useState({\n      x: 0,\n      y: 0\n    });\n    const [isVisible, setIsVisible] = React.useState(false);\n    const [isActive, setIsActive] = React.useState(false);\n    const [isActiveClickable, setIsActiveClickable] = React.useState(false);\n    let endX = React.useRef(0);\n    let endY = React.useRef(0);\n    /**\n     * Primary Mouse move event\n     * @param {number} clientX - MouseEvent.clientx\n     * @param {number} clientY - MouseEvent.clienty\n     */\n\n    const onMouseMove = React.useCallback(_ref2 => {\n      let {\n        clientX,\n        clientY\n      } = _ref2;\n      setCoords({\n        x: clientX,\n        y: clientY\n      });\n      cursorInnerRef.current.style.top = `${clientY}px`;\n      cursorInnerRef.current.style.left = `${clientX}px`;\n      endX.current = clientX;\n      endY.current = clientY;\n    }, []); // Outer Cursor Animation Delay\n\n    const animateOuterCursor = React.useCallback(time => {\n      if (previousTimeRef.current !== undefined) {\n        coords.x += (endX.current - coords.x) / trailingSpeed;\n        coords.y += (endY.current - coords.y) / trailingSpeed;\n        cursorOuterRef.current.style.top = `${coords.y}px`;\n        cursorOuterRef.current.style.left = `${coords.x}px`;\n      }\n      previousTimeRef.current = time;\n      requestRef.current = requestAnimationFrame(animateOuterCursor);\n    }, [requestRef] // eslint-disable-line\n    );\n\n    const getScaleAmount = (orignalSize, scaleAmount) => {\n      return parseInt(orignalSize * scaleAmount) + 'px';\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n\n    const scaleBySize = React.useCallback((cursorRef, orignalSize, scaleAmount) => {\n      cursorRef.style.height = getScaleAmount(orignalSize, scaleAmount);\n      cursorRef.style.width = getScaleAmount(orignalSize, scaleAmount);\n    }); // RAF for animateOuterCursor\n\n    React.useEffect(() => {\n      requestRef.current = requestAnimationFrame(animateOuterCursor);\n      return () => cancelAnimationFrame(requestRef.current);\n    }, [animateOuterCursor]); // Mouse Events State updates\n\n    const onMouseDown = React.useCallback(() => setIsActive(true), []);\n    const onMouseUp = React.useCallback(() => setIsActive(false), []);\n    const onMouseEnterViewport = React.useCallback(() => setIsVisible(true), []);\n    const onMouseLeaveViewport = React.useCallback(() => setIsVisible(false), []);\n    useEventListener('mousemove', onMouseMove);\n    useEventListener('mousedown', onMouseDown);\n    useEventListener('mouseup', onMouseUp);\n    useEventListener('mouseover', onMouseEnterViewport);\n    useEventListener('mouseout', onMouseLeaveViewport); // Cursors Hover/Active State\n\n    React.useEffect(() => {\n      if (isActive) {\n        scaleBySize(cursorInnerRef.current, innerSize, innerScale);\n        scaleBySize(cursorOuterRef.current, outerSize, outerScale);\n      } else {\n        scaleBySize(cursorInnerRef.current, innerSize, 1);\n        scaleBySize(cursorOuterRef.current, outerSize, 1);\n      }\n    }, [innerSize, innerScale, outerSize, outerScale, scaleBySize, isActive]); // Cursors Click States\n\n    React.useEffect(() => {\n      if (isActiveClickable) {\n        scaleBySize(cursorInnerRef.current, innerSize, innerScale * 1.2);\n        scaleBySize(cursorOuterRef.current, outerSize, outerScale * 1.4);\n      }\n    }, [innerSize, innerScale, outerSize, outerScale, scaleBySize, isActiveClickable]); // Cursor Visibility Statea\n\n    React.useEffect(() => {\n      if (isVisible) {\n        cursorInnerRef.current.style.opacity = 1;\n        cursorOuterRef.current.style.opacity = 1;\n      } else {\n        cursorInnerRef.current.style.opacity = 0;\n        cursorOuterRef.current.style.opacity = 0;\n      }\n    }, [isVisible]); // Click event state updates\n\n    React.useEffect(() => {\n      const clickableEls = document.querySelectorAll(clickables.join(','));\n      clickableEls.forEach(el => {\n        el.style.cursor = 'none';\n        el.addEventListener('mouseover', () => {\n          setIsActive(true);\n        });\n        el.addEventListener('click', () => {\n          setIsActive(true);\n          setIsActiveClickable(false);\n        });\n        el.addEventListener('mousedown', () => {\n          setIsActiveClickable(true);\n        });\n        el.addEventListener('mouseup', () => {\n          setIsActive(true);\n        });\n        el.addEventListener('mouseout', () => {\n          setIsActive(false);\n          setIsActiveClickable(false);\n        });\n      });\n      return () => {\n        clickableEls.forEach(el => {\n          el.removeEventListener('mouseover', () => {\n            setIsActive(true);\n          });\n          el.removeEventListener('click', () => {\n            setIsActive(true);\n            setIsActiveClickable(false);\n          });\n          el.removeEventListener('mousedown', () => {\n            setIsActiveClickable(true);\n          });\n          el.removeEventListener('mouseup', () => {\n            setIsActive(true);\n          });\n          el.removeEventListener('mouseout', () => {\n            setIsActive(false);\n            setIsActiveClickable(false);\n          });\n        });\n      };\n    }, [isActive, clickables]); // Cursor Styles\n\n    const styles = {\n      cursorInner: {\n        zIndex: 999,\n        position: 'fixed',\n        display: 'block',\n        width: innerSize,\n        height: innerSize,\n        backgroundColor: `rgba(${color}, 1)`,\n        borderRadius: '50%',\n        pointerEvents: 'none',\n        transform: 'translate(-50%, -50%)',\n        transition: 'opacity 0.15s ease-in-out, height 0.2s ease-in-out, width 0.2s ease-in-out',\n        ...(innerStyle && innerStyle)\n      },\n      cursorOuter: {\n        zIndex: 999,\n        position: 'fixed',\n        display: 'block',\n        width: outerSize,\n        height: outerSize,\n        backgroundColor: `rgba(${color}, ${outerAlpha})`,\n        borderRadius: '50%',\n        pointerEvents: 'none',\n        transform: 'translate(-50%, -50%)',\n        transition: 'opacity 0.15s ease-in-out, height 0.2s ease-in-out, width 0.2s ease-in-out',\n        ...(outerStyle && outerStyle)\n      }\n    }; // Hide / Show global cursor\n\n    if (!showSystemCursor) document.body.style.cursor = 'none';\n    return /*#__PURE__*/React__default[\"default\"].createElement(React__default[\"default\"].Fragment, null, /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n      ref: cursorOuterRef,\n      style: styles.cursorOuter\n    }), /*#__PURE__*/React__default[\"default\"].createElement(\"div\", {\n      ref: cursorInnerRef,\n      style: styles.cursorInner\n    }));\n  }\n  /**\n   * AnimatedCursor\n   * Calls and passes props to CursorCore if not a touch/mobile device.\n   */\n\n  function AnimatedCursor(_ref3) {\n    let {\n      clickables,\n      color,\n      innerScale,\n      innerSize,\n      innerStyle,\n      outerAlpha,\n      outerScale,\n      outerSize,\n      outerStyle,\n      showSystemCursor,\n      trailingSpeed\n    } = _ref3;\n    if (typeof navigator !== 'undefined' && IsDevice.any()) {\n      return /*#__PURE__*/React__default[\"default\"].createElement(React__default[\"default\"].Fragment, null);\n    }\n    return /*#__PURE__*/React__default[\"default\"].createElement(CursorCore, {\n      clickables: clickables,\n      color: color,\n      innerScale: innerScale,\n      innerSize: innerSize,\n      innerStyle: innerStyle,\n      outerAlpha: outerAlpha,\n      outerScale: outerScale,\n      outerSize: outerSize,\n      outerStyle: outerStyle,\n      showSystemCursor: showSystemCursor,\n      trailingSpeed: trailingSpeed\n    });\n  }\n  AnimatedCursor.propTypes = {\n    clickables: propTypes.exports.array,\n    color: propTypes.exports.string,\n    innerScale: propTypes.exports.number,\n    innerSize: propTypes.exports.number,\n    innerStyle: propTypes.exports.object,\n    outerAlpha: propTypes.exports.number,\n    outerScale: propTypes.exports.number,\n    outerSize: propTypes.exports.number,\n    outerStyle: propTypes.exports.object,\n    showSystemCursor: propTypes.exports.bool,\n    trailingSpeed: propTypes.exports.number\n  };\n  return AnimatedCursor;\n});","map":null,"metadata":{},"sourceType":"script"}